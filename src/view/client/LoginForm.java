/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package view.client;

import java.io.IOException;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import model.Message;
import model.User;

/**
 *
 * @author Admin
 */

public class LoginForm extends javax.swing.JFrame implements inReceiveMessage{
    
    static public User user = null;
    
    static public String IPServer;
    static public String Port;
    static public Socket socket = null;
    
    ListenServer listenServer = null;
    
    /**
     * Creates new form Main
     */
    public LoginForm() {
        initComponents();
        
        ImageIcon icon = new ImageIcon("Ok.png");
        bt_login.setIcon(icon);
        ImageIcon icon1 = new ImageIcon("Button_cancel.png");
        btn_Exit.setIcon(icon1);
        ImageIcon icon2 = new ImageIcon("register.png");
        btn_DangKy.setIcon(icon2);
        setSize(500,500);
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPasswordField1 = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tx_username = new javax.swing.JTextField();
        tx_password = new javax.swing.JPasswordField();
        bt_login = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtIP = new javax.swing.JTextField();
        btn_DangKy = new javax.swing.JButton();
        btn_Exit = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        labelTitle = new javax.swing.JLabel();

        jPasswordField1.setText("jPasswordField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Đăng nhập");
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("User Name:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(90, 170, 92, 22);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Password:");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(90, 210, 80, 22);
        getContentPane().add(tx_username);
        tx_username.setBounds(220, 170, 160, 24);

        tx_password.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_passwordKeyPressed(evt);
            }
        });
        getContentPane().add(tx_password);
        tx_password.setBounds(220, 210, 160, 22);

        bt_login.setForeground(new java.awt.Color(255, 0, 102));
        bt_login.setText("Login");
        bt_login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_loginActionPerformed(evt);
            }
        });
        getContentPane().add(bt_login);
        bt_login.setBounds(170, 290, 110, 40);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Server IP:");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(90, 130, 90, 22);

        txtIP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIPActionPerformed(evt);
            }
        });
        getContentPane().add(txtIP);
        txtIP.setBounds(220, 130, 160, 24);

        btn_DangKy.setForeground(new java.awt.Color(255, 0, 102));
        btn_DangKy.setText("Register");
        btn_DangKy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_DangKyActionPerformed(evt);
            }
        });
        getContentPane().add(btn_DangKy);
        btn_DangKy.setBounds(20, 290, 120, 40);

        btn_Exit.setForeground(new java.awt.Color(255, 0, 102));
        btn_Exit.setText("Exit");
        btn_Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ExitActionPerformed(evt);
            }
        });
        getContentPane().add(btn_Exit);
        btn_Exit.setBounds(310, 290, 110, 40);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/background0.jpg"))); // NOI18N
        jLabel5.setText("jLabel5");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(1, 0, 490, 480);

        labelTitle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/title.PNG"))); // NOI18N
        labelTitle.setText("jLabel7");
        getContentPane().add(labelTitle);
        labelTitle.setBounds(80, 330, 260, 60);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ExitActionPerformed
        // TODO add your handling code here:
        int x = JOptionPane.showConfirmDialog(null,"Bạn có muốn thoát chương trình này không","close",JOptionPane.YES_NO_OPTION,JOptionPane.INFORMATION_MESSAGE);
        if(x==JOptionPane.YES_OPTION){
            this.dispose();
        }

    }//GEN-LAST:event_btn_ExitActionPerformed

    //xử lý với login button
    private void bt_loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_loginActionPerformed
        // TODO add your handling code here:
        final String username;
        final String password;

        connectServer();

        username = tx_username.getText();
        password = String.valueOf(tx_password.getPassword());

        if(username.compareTo("")==0 || password.compareTo("") == 0)
        {
            JOptionPane.showMessageDialog(null, "Nhập đầy đủ user name, password", "Error", 1);
            return;
        }

        if (listenServer!=null)
        {

            try {
                listenServer.SendMessage(0, new User(username, password));  //sendMessage ở ClientHandler phía server xử lý
            } catch (IOException ex) {
                Logger.getLogger(LoginForm.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

    }//GEN-LAST:event_bt_loginActionPerformed

    private void btn_DangKyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_DangKyActionPerformed
        // TODO add your handling code here:
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                connectServer();
                new Register(listenServer).setVisible(true);
            }
        });
    }//GEN-LAST:event_btn_DangKyActionPerformed

    private void tx_passwordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_passwordKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyChar()=='\n')
        bt_loginActionPerformed(null);
    }//GEN-LAST:event_tx_passwordKeyPressed

    private void txtIPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIPActionPerformed

    
    void connectServer()
    {   
        
        IPServer = txtIP.getText();
       
        Port = "9999";
        
        try {
            if (socket==null)
            {
                socket = new Socket(IPServer, Integer.parseInt(Port));
                listenServer = new ListenServer(socket);
                listenServer.receive = this;
                listenServer.start();
            }
        } catch (UnknownHostException ex) {
            Logger.getLogger(LoginForm.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Không kết nối được với server!", "Error", 1);
            return;
        } catch (IOException ex) {
            Logger.getLogger(LoginForm.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Không kết nối được với server!", "Error", 1);
            return;
        }
    }
    
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_login;
    private javax.swing.JButton btn_DangKy;
    private javax.swing.JButton btn_Exit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JLabel labelTitle;
    private javax.swing.JPasswordField tx_password;
    private javax.swing.JTextField tx_username;
    private javax.swing.JTextField txtIP;
    // End of variables declaration//GEN-END:variables

    @Override
    public void ReceiveMessage(Message msg) throws IOException {
        switch (msg.getType()) {
            case 0: {
                user = (User) msg.getContent();
                if (user != null &&user.getId()!=0) {
                    listenServer.user = user;
                   
                    java.awt.EventQueue.invokeLater(new Runnable() {
                        public void run() {
                            System.out.println("CLIENT");
                            new RoomFrame(listenServer).setVisible(true);
                        }
                    });
                    //this.setVisible(false);
                    this.dispose();
                }
                else if(user!=null&&user.getId()==0){
                    JOptionPane.showMessageDialog(null, "Tài khoản của bạn đang được sử dụng!", "Message", 1);
                }
                else {
                    JOptionPane.showMessageDialog(null, "Tên tài khoản hoặc mật khẩu không đúng", "Message", 1);
                }
                break;
            }
            case 1: {
                   JOptionPane.showMessageDialog(null, msg.getContent(), "Message", 1);
                   
                   break;
               }


        }

    }
}
